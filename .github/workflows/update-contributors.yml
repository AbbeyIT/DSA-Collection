name: 🏆 Update Contributors

on:
  push:
    branches: 
      - main
  pull_request:
    types: [closed]
    branches: [main]
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  update-contributors:
    runs-on: ubuntu-latest
    # Run on push to main, manual trigger, or when PR is merged
    # But skip if the commit message contains [skip ci] or is from the bot itself
    if: |
      (github.event_name == 'push' || 
       github.event_name == 'workflow_dispatch' ||
       (github.event_name == 'pull_request' && github.event.pull_request.merged == true)) &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, 'Auto-update contributor')

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0

    - name: 🏆 Update contributors list
      run: |
        echo "🔍 Fetching contributors from GitHub API..."
        
        # Fetch contributors and create HTML
        curl -s "https://api.github.com/repos/${{ github.repository }}/contributors?per_page=100" | \
        jq -r '.[] | select(.type != "Bot") | "<img src=\"\(.avatar_url)&s=50\" width=\"50\" height=\"50\" alt=\"\(.login)\" />"' | \
        {
          echo "<div align=\"center\">"
          echo "  <a href=\"https://github.com/${{ github.repository }}/graphs/contributors\">"
          cat
          echo "  </a>"
          echo "</div>"
        } > contributors.html

        echo "📄 Contributors HTML generated"
        echo ""

        # Verify README.md exists
        if [ ! -f "README.md" ]; then
          echo "❌ ERROR: README.md not found!"
          exit 1
        fi

        echo "✅ README.md found"
        echo "📝 Checking for contributor tags..."
        
        # Check if tags exist
        if ! grep -q "<!-- CONTRIBUTORS_LIST -->" README.md; then
          echo "❌ ERROR: <!-- CONTRIBUTORS_LIST --> tag not found in README.md"
          exit 1
        fi
        
        if ! grep -q "<!-- CONTRIBUTORS_LIST_END -->" README.md; then
          echo "❌ ERROR: <!-- CONTRIBUTORS_LIST_END --> tag not found in README.md"
          exit 1
        fi
        
        echo "✅ Both tags found in README.md"
        echo "🔄 Updating README.md with contributors..."

        # Update README.md
        python3 << 'EOF'
        import re
        import sys

        try:
            with open('README.md', 'r', encoding='utf-8') as f:
                text = f.read()
            
            with open('contributors.html', 'r', encoding='utf-8') as c:
                contributors_html = c.read().strip()
            
            new_text = re.sub(
                r'<!-- CONTRIBUTORS_LIST -->.*?<!-- CONTRIBUTORS_LIST_END -->',
                f'<!-- CONTRIBUTORS_LIST -->\n{contributors_html}\n<!-- CONTRIBUTORS_LIST_END -->',
                text,
                flags=re.DOTALL
            )
            
            with open('README.md', 'w', encoding='utf-8') as f:
                f.write(new_text)
            
            print("✅ README.md updated successfully!")
            
        except Exception as e:
            print(f"❌ ERROR: {str(e)}")
            sys.exit(1)
        EOF

        echo "✅ Contributors list update completed!"

    - name: 📈 Update language statistics
      run: |
        echo "📈 Updating language statistics..."

        # Count files by language
        cpp_files=$(find CPP/ -name "*.cpp" 2>/dev/null | wc -l || echo 0)
        java_files=$(find Java/ -name "*.java" 2>/dev/null | wc -l || echo 0)
        python_files=$(find Python/ -name "*.py" 2>/dev/null | wc -l || echo 0)

        total_implementations=$((cpp_files + java_files + python_files))

        echo "📊 Language Statistics:"
        echo "C++: $cpp_files files"
        echo "Java: $java_files files"
        echo "Python: $python_files files"
        echo "Total: $total_implementations implementations"

        supported_languages=3

        # Update README stats
        if [ -f "README.md" ]; then
          sed -i "s/💻 \*\*[0-9]*+ Languages\*\*/💻 **${supported_languages}+ Languages**/g" README.md
        fi

    - name: 📅 Update last modified date
      run: |
        echo "📅 Updating last modified date..."
        current_date=$(date +"%B %Y")

        if [ -f "HALL_OF_FAME.md" ]; then
          sed -i "s/\*Last updated: .* [0-9]*\*/\*Last updated: $current_date\*/g" HALL_OF_FAME.md
          echo "✅ Updated last modified date in HALL_OF_FAME.md"
        fi

    - name: 🔍 Check for changes
      id: changes
      run: |
        if ! git diff --quiet; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "📝 Changes detected"
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "ℹ️  No changes needed"
        fi

    - name: 💾 Create Pull Request
      if: steps.changes.outputs.has_changes == 'true' && github.event_name == 'pull_request'
      id: cpr
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "🏆 Auto-update contributor statistics"
        committer: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
        author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
        branch: contributors-auto-update
        delete-branch: true
        title: "🏆 Update Contributor Statistics"
        body: |
          ## 🤖 Automated Contributor Update
          
          This PR automatically updates the contributors list after PR #${{ github.event.pull_request.number }} was merged.
          
          ### 📋 What's Updated:
          - 👥 Contributors avatars in README.md (added @${{ github.event.pull_request.user.login }})
          - 📊 Language statistics
          - 📅 Last modified date
          
          ### ℹ️ Instructions:
          **Please review and merge this PR** to keep the contributors list up-to-date.
          
          ---
          <sub>🤖 This is an automated PR created by GitHub Actions</sub>
        labels: |
          documentation
          automated
    
    - name: 📊 PR Creation Result
      if: steps.changes.outputs.has_changes == 'true' && github.event_name == 'pull_request'
      run: |
        echo "PR Number: ${{ steps.cpr.outputs.pull-request-number }}"
        echo "PR URL: ${{ steps.cpr.outputs.pull-request-url }}"
        echo "PR Operation: ${{ steps.cpr.outputs.pull-request-operation }}"
        echo "PR Head SHA: ${{ steps.cpr.outputs.pull-request-head-sha }}"
        
        if [ -z "${{ steps.cpr.outputs.pull-request-number }}" ]; then
          echo "⚠️ No PR was created (possibly no changes or PR already exists)"
        else
          echo "✅ PR #${{ steps.cpr.outputs.pull-request-number }} ${{ steps.cpr.outputs.pull-request-operation }}"
        fi

    - name: 📋 Summary
      run: |
        echo "## 🏆 Contributors Update" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.changes.outputs.has_changes }}" == "true" ]; then
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            if [ -n "${{ steps.cpr.outputs.pull-request-number }}" ]; then
              echo "✅ **Status**: Pull request ${{ steps.cpr.outputs.pull-request-operation }}" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "🔗 **PR**: [#${{ steps.cpr.outputs.pull-request-number }}](${{ steps.cpr.outputs.pull-request-url }})" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "📝 **Action Required**: Please review and merge the PR to apply updates." >> $GITHUB_STEP_SUMMARY
            else
              echo "⚠️ **Status**: Changes detected but PR was not created" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "This may happen if the PR already exists with the same changes." >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "✅ **Status**: Contributors list updated" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📌 **Trigger**: Direct push to main" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️ No PR created for direct pushes. Changes are ready in working directory." >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "ℹ️ **Status**: No changes needed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✨ Contributors list is already up-to-date!" >> $GITHUB_STEP_SUMMARY
        fi