name: 🏆 Update Contributors

on:
  pull_request:
    types: [closed]
    branches: [main]
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  update-contributors:
    runs-on: ubuntu-latest
    # Only run when PR is merged to main
    if: github.event.pull_request.merged == true

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        ref: main
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: 🏆 Update contributors list
      run: |
        # Fetch contributors and create HTML
        curl -s "https://api.github.com/repos/${{ github.repository }}/contributors?per_page=100" | \
        jq -r '.[] | select(.type != "Bot") | "<img src=\"\(.avatar_url)&s=50\" width=\"50\" height=\"50\" alt=\"\(.login)\" />"' | \
        {
          echo "<div align=\"center\">"
          echo "  <a href=\"https://github.com/${{ github.repository }}/graphs/contributors\">"
          cat
          echo "  </a>"
          echo "</div>"
        } > contributors.html

        # Update README.md
        python << 'EOF'
        import re

        with open('README.md', 'r') as f:
            text = f.read()
        
        with open('contributors.html', 'r') as c:
            contributors_html = c.read()
        
        # Replace everything between the tags
        new_text = re.sub(
            r'(<!-- CONTRIBUTORS_LIST -->).*?(<!-- CONTRIBUTORS_LIST_END -->)',
            f'\\1\n{contributors_html}\n\\2',
            text,
            flags=re.DOTALL
        )
        
        with open('README.md', 'w') as f:
            f.write(new_text)
        EOF

    - name: 📈 Update language statistics
      run: |
        echo "📈 Updating language statistics..."

        # Count files by language
        cpp_files=$(find CPP/ -name "*.cpp" 2>/dev/null | wc -l || echo 0)
        java_files=$(find Java/ -name "*.java" 2>/dev/null | wc -l || echo 0)
        python_files=$(find Python/ -name "*.py" 2>/dev/null | wc -l || echo 0)

        total_implementations=$((cpp_files + java_files + python_files))

        echo "📊 Language Statistics:"
        echo "C++: $cpp_files files"
        echo "Java: $java_files files"
        echo "Python: $python_files files"
        echo "Total: $total_implementations implementations"

        # Count supported languages
        supported_languages=3 # Base languages: C++, Java, Python

        echo "Supported languages: $supported_languages"

        # Update README stats
        if [ -f "README.md" ]; then
          sed -i "s/💻 \*\*[0-9]*+ Languages\*\*/💻 **${supported_languages}+ Languages**/g" README.md
        fi

    - name: 📅 Update last modified date
      run: |
        echo "📅 Updating last modified date..."
        current_date=$(date +"%B %Y")

        if [ -f "HALL_OF_FAME.md" ]; then
          sed -i "s/\*Last updated: .* [0-9]*\*/\*Last updated: $current_date\*/g" HALL_OF_FAME.md
          echo "✅ Updated last modified date in HALL_OF_FAME.md"
        fi

    - name: 🔍 Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "No changes to commit"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Changed files:"
          git diff --name-only
        fi

    - name: 💾 Create and Merge Pull Request
      if: steps.changes.outputs.has_changes == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Configure git
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

        # Create a new branch
        BRANCH_NAME="update-contributors-$(date +%s)"
        git checkout -b $BRANCH_NAME

        # Add and commit changes
        git add README.md HALL_OF_FAME.md
        git commit -m "🏆 Auto-update contributor statistics"

        # Push the branch
        git push origin $BRANCH_NAME

        # Create pull request
        PR_URL=$(gh pr create \
          --title "🏆 Update Contributor Statistics" \
          --body "## 🏆 Automated Contributor Statistics Update

        This PR automatically updates:
        - 👥 Contributors list in README.md
        - 📊 Language statistics  
        - 📅 Last modified date in HALL_OF_FAME.md

        ### Changes
        - Updated contributor avatars and information
        - Refreshed language file counts
        - Updated timestamp

        **Auto-generated by GitHub Actions** 🤖
        **Triggered by PR #${{ github.event.pull_request.number }}**" \
          --base main \
          --head $BRANCH_NAME)

        echo "✅ Pull request created: $PR_URL"

        # Get PR number
        PR_NUMBER=$(echo $PR_URL | grep -oP '\d+$')

        # Enable auto-merge
        gh pr merge $PR_NUMBER --auto --squash

        echo "✅ Auto-merge enabled for PR #$PR_NUMBER"

    - name: 📋 Generate summary
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        echo "🏆 Contributors Update Summary"
        echo "=============================="
        echo ""
        echo "📊 Action Taken:"
        echo "  ✅ Created PR with contributor updates"
        echo "  🔄 Auto-merge enabled"
        echo "  📅 Triggered by: PR #${{ github.event.pull_request.number }}"
        echo "  👤 Contributor: @${{ github.event.pull_request.user.login }}"
        echo ""
        echo "🎉 Contributor statistics will be updated once PR is auto-merged!"

    - name: 📋 Generate summary (no changes)
      if: steps.changes.outputs.has_changes == 'false'
      run: |
        echo "🏆 Contributors Update Summary"
        echo "=============================="
        echo ""
        echo "ℹ️ No changes needed - contributors list is already up to date"