name: üèÜ Update Contributors

on:
  push:
    branches: [main]
  pull_request:
    types: [closed]
    branches: [main]
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  update-contributors:
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)

    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: üßë‚Äçüíª Identify Contributor
      id: get_contributor
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "contributor=${{ github.event.pull_request.user.login }}" >> $GITHUB_OUTPUT
        else
          echo "contributor=${{ github.actor }}" >> $GITHUB_OUTPUT
        fi

    - name: ‚ú® Update Contributor Profile
      run: |
        CONTRIBUTOR="${{ steps.get_contributor.outputs.contributor }}"
        AVATAR_URL="https://github.com/$CONTRIBUTOR.png"
        CONTRIBUTOR_LINE="<a href='https://github.com/$CONTRIBUTOR'><img src='$AVATAR_URL' width='50px' alt='$CONTRIBUTOR'/></a>"

        # Update Hall of Fame
        if ! grep -i -q "$CONTRIBUTOR" HALL_OF_FAME.md; then
          sed -i "/<!-- This section is automatically updated by our GitHub Actions workflow -->/a $CONTRIBUTOR_LINE" HALL_OF_FAME.md
        fi

        # Update README
        if ! grep -q "## ‚ú® Our Amazing Contributors" README.md; then
          echo -e "\n## ‚ú® Our Amazing Contributors\n\n<!-- This section is automatically updated by our GitHub Actions workflow -->\n" >> README.md
        fi
        if ! grep -i -q "$CONTRIBUTOR" README.md; then
          echo "Updating README.md for contributor: $CONTRIBUTOR"
          sed -i "/<!-- This section is automatically updated by our GitHub Actions workflow -->/a $CONTRIBUTOR_LINE" README.md
        fi

    - name: üìä Fetch Repository Statistics
      id: repo_stats
      run: |
        CPP_FILES=$(find CPP -name '*.cpp' | wc -l)
        JAVA_FILES=$(find Java -name '*.java' | wc -l)
        PYTHON_FILES=$(find Python -name '*.py' | wc -l)
        TOTAL_FILES=$((CPP_FILES + JAVA_FILES + PYTHON_FILES))
        echo "total_implementations=$TOTAL_FILES" >> $GITHUB_OUTPUT
        echo "cpp_implementations=$CPP_FILES" >> $GITHUB_OUTPUT
        echo "java_implementations=$JAVA_FILES" >> $GITHUB_OUTPUT
        echo "python_implementations=$PYTHON_FILES" >> $GITHUB_OUTPUT

    - name: üìà Update Hall of Fame Statistics
      run: |
        # Update total implementations
        sed -i "s#| üéØ **Total Implementations** | [0-9]* |#| üéØ **Total Implementations** | ${{ steps.repo_stats.outputs.total_implementations }} |#g" HALL_OF_FAME.md

        # Update per-language implementations (anchored under headers)
        sed -i "/### Python/{n;s/- Implementations: [0-9]*/- Implementations: ${{ steps.repo_stats.outputs.python_implementations }}/}" HALL_OF_FAME.md
        sed -i "/### C++/{n;s/- Implementations: [0-9]*/- Implementations: ${{ steps.repo_stats.outputs.cpp_implementations }}/}" HALL_OF_FAME.md
        sed -i "/### Java/{n;s/- Implementations: [0-9]*/- Implementations: ${{ steps.repo_stats.outputs.java_implementations }}/}" HALL_OF_FAME.md

    - name: üìÖ Update Last Modified Date
      run: |
        current_date=$(date +"%B %Y")
        sed -i "s#\*Last updated: .* [0-9]*\*#\*Last updated: $current_date\*#g" HALL_OF_FAME.md

    - name: üíæ Commit and Push Changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md HALL_OF_FAME.md
        if ! git diff --staged --quiet; then
          git commit -m "üèÜ Chore: Update contributor statistics and profiles"
          git push
        fi
